// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateContact(ctx context.Context, arg CreateContactParams) (Contact, error)
	CreateProject(ctx context.Context, arg CreateProjectParams) (Project, error)
	CreateTag(ctx context.Context, arg CreateTagParams) (Tag, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateUserSettings(ctx context.Context, arg CreateUserSettingsParams) (UsersSetting, error)
	CreateWallet(ctx context.Context, arg CreateWalletParams) (Wallet, error)
	DeleteContact(ctx context.Context, arg DeleteContactParams) error
	DeleteExpiredSessions(ctx context.Context) error
	DeleteProject(ctx context.Context, arg DeleteProjectParams) error
	DeleteSession(ctx context.Context, key string) error
	DeleteTag(ctx context.Context, arg DeleteTagParams) error
	DeleteUser(ctx context.Context, userID uuid.UUID) error
	DeleteUserSettings(ctx context.Context, userID uuid.UUID) error
	DeleteUserTags(ctx context.Context, userID uuid.UUID) error
	DeleteWallet(ctx context.Context, arg DeleteWalletParams) error
	GetContact(ctx context.Context, arg GetContactParams) (Contact, error)
	GetProject(ctx context.Context, arg GetProjectParams) (Project, error)
	GetProjectWallets(ctx context.Context, arg GetProjectWalletsParams) ([]Wallet, error)
	GetSession(ctx context.Context, key string) (Session, error)
	GetTag(ctx context.Context, arg GetTagParams) (Tag, error)
	GetUser(ctx context.Context, userID uuid.UUID) (User, error)
	GetUserByExternalID(ctx context.Context, arg GetUserByExternalIDParams) (User, error)
	GetUserSettings(ctx context.Context, userID uuid.UUID) (UsersSetting, error)
	GetWallet(ctx context.Context, arg GetWalletParams) (Wallet, error)
	ListContacts(ctx context.Context, arg ListContactsParams) ([]Contact, error)
	ListContactsPaginated(ctx context.Context, arg ListContactsPaginatedParams) ([]Contact, error)
	ListProjects(ctx context.Context, userID uuid.UUID) ([]Project, error)
	ListProjectsPaginated(ctx context.Context, arg ListProjectsPaginatedParams) ([]Project, error)
	ListTags(ctx context.Context, userID uuid.UUID) ([]Tag, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	// Add efficient pagination using keyset pagination
	ListUsersPaginated(ctx context.Context, arg ListUsersPaginatedParams) ([]User, error)
	ListWallets(ctx context.Context, arg ListWalletsParams) ([]Wallet, error)
	ListWalletsPaginated(ctx context.Context, arg ListWalletsPaginatedParams) ([]Wallet, error)
	SearchContacts(ctx context.Context, arg SearchContactsParams) ([]Contact, error)
	SearchContactsByPhone(ctx context.Context, arg SearchContactsByPhoneParams) ([]Contact, error)
	SearchProjects(ctx context.Context, arg SearchProjectsParams) ([]Project, error)
	// Add efficient search
	SearchUsers(ctx context.Context, arg SearchUsersParams) ([]User, error)
	SearchWallets(ctx context.Context, arg SearchWalletsParams) ([]Wallet, error)
	UpdateContact(ctx context.Context, arg UpdateContactParams) (Contact, error)
	UpdateProject(ctx context.Context, arg UpdateProjectParams) (Project, error)
	UpdateTag(ctx context.Context, arg UpdateTagParams) (Tag, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateUserLastLogin(ctx context.Context, userID uuid.UUID) error
	UpdateUserRefreshToken(ctx context.Context, arg UpdateUserRefreshTokenParams) error
	UpdateUserSettings(ctx context.Context, arg UpdateUserSettingsParams) (UsersSetting, error)
	UpdateWallet(ctx context.Context, arg UpdateWalletParams) (Wallet, error)
	UpsertSession(ctx context.Context, arg UpsertSessionParams) (Session, error)
}

var _ Querier = (*Queries)(nil)
